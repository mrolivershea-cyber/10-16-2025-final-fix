import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Activity } from 'lucide-react';

/**
 * –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–º–ø–æ—Ä—Ç–∞
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–∞–∫ chunked –∏–º–ø–æ—Ä—Ç —Å session_id, —Ç–∞–∫ –∏ –æ–±—ã—á–Ω—ã–π –∏–º–ø–æ—Ä—Ç —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
 */
const ProgressDisplay = ({ 
  type = 'chunked', // 'chunked' –∏–ª–∏ 'regular'
  progress = null, // –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è chunked –∏–º–ø–æ—Ä—Ç–∞
  regularProgress = 0, // –ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ (0-100)
  regularStats = { added: 0, skipped: 0, errors: 0 }, // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
  fileInfo = null, // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ { size, protocol }
  onMinimize = null, // Callback –¥–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
  onCancel = null // Callback –¥–ª—è –æ—Ç–º–µ–Ω—ã
}) => {
  // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  const percentComplete = type === 'chunked'
    ? Math.round(((progress?.processed_chunks || 0) / (progress?.total_chunks || 1)) * 100)
    : regularProgress;

  // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const stats = type === 'chunked'
    ? {
        added: progress?.added || 0,
        skipped: progress?.skipped || 0,
        errors: progress?.errors || 0,
        total: (progress?.added || 0) + (progress?.skipped || 0) + (progress?.errors || 0)
      }
    : {
        added: regularStats.added || 0,
        skipped: regularStats.skipped || 0,
        errors: regularStats.errors || 0,
        total: (regularStats.added || 0) + (regularStats.skipped || 0) + (regularStats.errors || 0)
      };

  // –í—ã—á–∏—Å–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ (—É–∑–ª–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É)
  const processingSpeed = type === 'chunked' && progress?.processed_chunks > 0
    ? Math.max(1, Math.round((stats.added + stats.skipped) / Math.max(1, progress.processed_chunks) * 10))
    : 0;

  // –¢–µ–∫—Å—Ç —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
  const currentOperation = type === 'chunked'
    ? (progress?.current_operation || '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è chunked –æ–±—Ä–∞–±–æ—Ç–∫–∏...')
    : '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É–∑–ª–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...';

  // –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  const progressDetails = type === 'chunked'
    ? `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${progress?.processed_chunks || 0} –∏–∑ ${progress?.total_chunks || 0} —á–∞—Å—Ç–µ–π`
    : fileInfo
      ? `–§–∞–π–ª: ${fileInfo.size || '—Ä–∞–∑–º–µ—Ä –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'} | –ü—Ä–æ—Ç–æ–∫–æ–ª: ${fileInfo.protocol || 'pptp'}`
      : '–§–∞–π–ª –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é';

  return (
    <Card className="border-blue-400 bg-blue-50 shadow-lg">
      <CardHeader className="pb-2 bg-blue-100 border-b border-blue-300">
        <div className="flex items-center justify-between">
          <CardTitle className="text-lg font-bold flex items-center text-blue-800">
            <Activity className="h-5 w-5 mr-2 text-blue-600" />
            {type === 'chunked' ? 'üìÇ Chunked Import - –ë–æ–ª—å—à–æ–π —Ñ–∞–π–ª' : 'üìÇ –ü—Ä—è–º–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞'}
          </CardTitle>
          <div className="flex space-x-2">
            {onMinimize && (
              <Button 
                variant="outline" 
                size="sm" 
                onClick={onMinimize}
                className="bg-white hover:bg-gray-100"
              >
                üìã –°–≤–µ—Ä–Ω—É—Ç—å –≤ —Ñ–æ–Ω
              </Button>
            )}
            {onCancel && (
              <Button 
                variant="destructive" 
                size="sm" 
                onClick={onCancel}
              >
                ‚èπÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å
              </Button>
            )}
          </div>
        </div>
      </CardHeader>
      
      <CardContent className="space-y-3 pt-4">
        {/* –¶–ï–ù–¢–†–ê–õ–¨–ù–´–ô –ü–†–û–¶–ï–ù–¢ */}
        <div className="text-center bg-white p-4 rounded-lg border-2 border-blue-300">
          <div className="text-5xl font-extrabold text-blue-600 mb-2">
            {percentComplete}%
          </div>
          <div className="text-lg font-semibold text-gray-700 mb-1">
            –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–º–ø–æ—Ä—Ç–∞
          </div>
          <div className="text-sm text-gray-600">
            {progressDetails}
          </div>
        </div>
        
        {/* –ü–†–û–ì–†–ï–°–°-–ë–ê–† */}
        <div className="space-y-1">
          <div className="flex justify-between text-xs text-gray-600">
            <span>
              {type === 'chunked' 
                ? `–ü—Ä–æ–≥—Ä–µ—Å—Å: ${progress?.processed_chunks || 0} –∏–∑ ${progress?.total_chunks || 0} —á–∞—Å—Ç–µ–π`
                : '–ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏'
              }
            </span>
            <span>{percentComplete}%</span>
          </div>
          <div className="relative w-full bg-blue-200 rounded-full h-4 overflow-hidden">
            <div 
              className="bg-gradient-to-r from-blue-500 to-blue-600 h-4 rounded-full transition-all duration-500 ease-out flex items-center justify-end pr-2"
              style={{ 
                width: `${Math.max(percentComplete, 5)}%` 
              }}
            >
              <span className="text-xs text-white font-semibold">
                {percentComplete > 10 ? `${percentComplete}%` : ''}
              </span>
            </div>
          </div>
          
          {/* –°–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ */}
          {type === 'chunked' && processingSpeed > 0 && (
            <div className="text-xs text-center text-gray-500">
              üöÄ –°–∫–æ—Ä–æ—Å—Ç—å: ~{processingSpeed} —É–∑–ª–æ–≤/—Å–µ–∫
            </div>
          )}
        </div>
        
        {/* –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê */}
        <div className="grid grid-cols-4 gap-2 text-sm">
          <div className="text-center p-3 bg-green-100 rounded-lg border border-green-200">
            <div className="text-xl font-bold text-green-800">
              {stats.added}
            </div>
            <div className="text-xs text-green-600">‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ</div>
          </div>
          <div className="text-center p-3 bg-yellow-100 rounded-lg border border-yellow-200">
            <div className="text-xl font-bold text-yellow-800">
              {stats.skipped}
            </div>
            <div className="text-xs text-yellow-600">‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ</div>
          </div>
          <div className="text-center p-3 bg-red-100 rounded-lg border border-red-200">
            <div className="text-xl font-bold text-red-800">
              {stats.errors}
            </div>
            <div className="text-xs text-red-600">‚ùå –û—à–∏–±–æ–∫</div>
          </div>
          <div className="text-center p-3 bg-blue-100 rounded-lg border border-blue-200">
            <div className="text-xl font-bold text-blue-800">
              {stats.total || '?'}
            </div>
            <div className="text-xs text-blue-600">üìä –í—Å–µ–≥–æ</div>
          </div>
        </div>
        
        {/* –¢–ï–ö–£–©–ê–Ø –û–ü–ï–†–ê–¶–ò–Ø */}
        <div className="bg-gray-50 border border-gray-200 p-3 rounded-lg">
          <div className="flex items-center justify-between mb-2">
            <span className="text-sm font-semibold text-gray-700">üíº –¢–µ–∫—É—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è</span>
            <span className="text-xs text-gray-500">
              {new Date().toLocaleTimeString()}
            </span>
          </div>
          <div className="text-sm text-gray-800 bg-white p-2 rounded border">
            {currentOperation}
          </div>
          
          <div className="flex items-center mt-2 space-x-2">
            <div className="flex space-x-1">
              <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce"></div>
              <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
              <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
            </div>
            <span className="text-xs text-blue-600 font-medium">–ê–∫—Ç–∏–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞</span>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

export default ProgressDisplay;
